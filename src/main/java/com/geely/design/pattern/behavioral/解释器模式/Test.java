package com.geely.design.pattern.behavioral.解释器模式;

/**
 * 解释器模式（应用少）
 * 定义：
 *      1.给定一个语言，定义它的文法表示，并定义一个解释器，这个解释器使用该标识来解释语言中的句子。
 * 类型：
 *      1.行为型
 * 适用场景
 *      1.某个特定类型问题发生频率足够高
 * 优点：
 *      1、可扩展性比较好，灵活。
 *      2、增加了新的解释表达式的方式。
 *      3、易于实现简单文法。
 * 缺点：
 *      1、可利用场景比较少。
 *      2、对于复杂的文法比较难维护。
 *      3、解释器模式会引起类膨胀。
 *      4、解释器模式采用递归调用方法。
 *
 */
public class Test {
    public static void main(String[] args) {

    }
}
